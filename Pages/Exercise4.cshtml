@page "/Exercise4"
@using WebApplication.Models
@using Microsoft.EntityFrameworkCore.Internal
@model WebApplication.Pages.Exercise4


@{
    ViewData["Title"] = "Keona - Exercise 4";
}


<div class="grid grid-cols-2 mb-20 px-4 md:px-0">
  <div id="comments" class=" max-w-7xl mx-auto col-span-2 bg-white overflow-hidden shadow rounded-lg mt-20">
    <div class="px-4 py-5 sm:p-6">
      <h2 class="text-2xl text-blue-800">
        Exercise 4 - C#: DataAccess method to get Person Orders by Date
      </h2>
      <p class="text-gray-700 text-xl ">
      Assumptions - Assuming we wouldn't want duplicate PersonId's. Assuming usage of ORM (EF CORE).
      </p>
    </div>
  </div>


  <div id="solution" class="  mx-0 md:mx-5 col-span-2 md:col-span-1  bg-white overflow-hidden shadow rounded-lg mt-10">
    <div class="px-4 py-5 sm:p-6">
      <h2 class="text-2xl text-blue-800">
        Answer
      </h2>
      <pre class="mt-2">
      <code class="sql rounded-md shadow-xl text-xs md:text-base">
    --Stored Procedure in DB

      Create Procedure GetPersonByOrderDate
          &#64;selectedDate Date
          as
      BEGIN
       set nocount on;

      select DISTINCT * from Person where PersonId in (
              select PersonId from Orders 
              where cast(OrderDateTime as Date) = &#64;selectedDate
          )

      END
    </code>
  </pre>
      <pre class="mt-2"><code class="c# rounded-md shadow-xl text-xs md:text-base">
      // C# code snippet pulling the stored proc using the parameter

  var dateParam = orderDateTime.ToString("yyyy-MM-dd");
  var sql = $"EXEC GetPersonByOrderDate '{dateParam}'";
  var personsFromDB = await _CONTEXT.Person.FromSqlRaw(sql).ToListAsync();
    </code></pre>
    </div>
  </div>

  <div id="output" class=" mx-0 md:mx-5 col-span-2 md:col-span-1  bg-white overflow-hidden shadow rounded-lg mt-10">
    <div class="px-4 py-5 sm:p-6">
      <h2 class="text-2xl text-blue-800">
        Output - is defaulted to 07/01/2020
      </h2>
   
      <div class="flex flex-col mt-6">
        <div class="-my-2 py-2 overflow-x-auto sm:-mx-6 sm:px-6 lg:-mx-8 lg:px-8">
          <div class="align-middle inline-block min-w-full shadow overflow-hidden sm:rounded-lg border-b border-gray-200">
            <table class="min-w-full divide-y divide-gray-200">
              <thead>
              <tr>
                <th class="px-6 py-3 bg-gray-50  leading-4 text-xs  font-medium text-gray-500  tracking-wider">
                  PersonId
                </th>
                <th class="px-6 py-3 bg-gray-50 leading-4 text-xs  font-medium text-gray-500  tracking-wider">
                  NameFirst
                </th>
                <th class="px-6 py-3 bg-gray-50 leading-4 text-xs  font-medium text-gray-500  tracking-wider">
                  NameLast
                </th>
             
              </tr>
              </thead>
              <tbody class="text-center">
              @foreach (var person in Model.personsOrders.OrderBy(o => o.PersonId))
              {
                <tr class="@(Model.personsOrders.IndexOf(person) % 2 == 0 ? "bg-white" : "bg-gray-50" )">
                  <td class="px-6 py-4 whitespace-no-wrap  text-sm leading-5 font-medium">
                    @person.PersonId
                  </td>
                  <td class="px-6 py-4 whitespace-no-wrap text-sm leading-5 font-medium text-gray-900">
                    @person.NameFirst
                  </td>
                  <td class="px-6 py-4 whitespace-no-wrap text-sm leading-5 text-gray-500">
                    @person.NameLast
                  </td>
              
                </tr>

              }
          
              </tbody>
       
            </table>
          
          </div>
        </div>
      </div>

    </div>
  </div>


</div>
